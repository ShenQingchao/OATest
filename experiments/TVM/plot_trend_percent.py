import matplotlib
import matplotlib.pyplot as plt
import numpy as np
from scipy.interpolate import PchipInterpolator


def plot_coverage(data, granularity):
    # time_points = list(range(1, 21))
    time_points = np.linspace(0, 12, num=25)
    ticks = range(0, 13, 1)
    # print(time_points)
    # print(list(ticks))

    plt.figure(figsize=(10, 7))
    styles = {
        'HirGen':  ('-o', '#1f99b4'),  # 蓝色
        'NNSmith': ('--s', '#ff7f0e'),  # 橙色
        'WhiteFox': (':x', '#9467bd'),    # 红色
        'OATest': ('-.v', '#2ca02c'),  # 绿色
    }

    for method, coverage in data.items():
        line_style, color = styles.get(method, ('-', 'black'))
        plt.plot(time_points, coverage, line_style, color=color, label=method,
                 markersize=9, linewidth=3)

    # plt.title('Coverage Over Time')
    plt.xlabel('Time (hours)',fontweight='bold')
    plt.ylabel(f'#Coverage (1000 {granularity})', fontweight='bold')
    plt.xticks(ticks, fontsize=22, fontweight='bold')
    plt.yticks(fontsize=22, fontweight='bold')

    plt.tight_layout()
    plt.legend(loc='lower right', fontsize=20)
    plt.savefig(f"trends_{granularity}.pdf")
    plt.show()


def preprocess(cov_data):
    cov_data = {k: v[:24] for k, v in cov_data.items()}
    for k, cov_list in cov_data.items():
        # if k == 'WhiteFox':
        #     cov_list = double_data(cov_list)
        # new_cov_list = [i/1000 for i in cov_list]
        new_cov_list = cov_list
        new_cov_list.insert(0, 0)
        print(len(new_cov_list))
        cov_data[k] = new_cov_list
    return cov_data


def plot_coverage_smooth(data, granularity):
    time_points = np.linspace(0, 12, num=25)  # 原始时间点
    ticks = range(0, 13, 1)

    plt.figure(figsize=(10, 7))
    styles = {
        'HirGen': ('-o', '#1f99b4'),  # 蓝色
        'NNSmith': ('--s', '#ff7f0e'),  # 橙色
        'WhiteFox': (':x', '#9467bd'),  # 紫色
        'OATest': ('-.v', '#2ca02c'),  # 绿色
    }

    for method, coverage in data.items():
        line_style, color = styles.get(method, ('-', 'black'))  # 获取样式和颜色

        # 使用PCHIP插值，生成平滑曲线
        pchip = PchipInterpolator(time_points, coverage)
        smooth_time = np.linspace(time_points.min(), time_points.max(), 300)  # 插值密度更高
        smooth_coverage = pchip(smooth_time)

        # 绘制平滑曲线（不标记插值点），并添加图例
        line, = plt.plot(smooth_time, smooth_coverage, line_style[:-1], color=color, linewidth=3, label=method)

        # 在原始数据点标记样式
        plt.plot(time_points, coverage, line_style[-1], color=color, linestyle='None', markersize=9)

    # 设置图例
    plt.xlabel('Time (hours)', fontsize=26)
    plt.ylabel(f'{granularity} Coverage (%)',  fontsize=26)
    plt.xticks(ticks, fontsize=26)
    plt.yticks(fontsize=26)

    plt.tight_layout()
    plt.legend(loc='lower right', fontsize=26)
    plt.savefig(f"trends_{granularity}.pdf")
    plt.show()


if __name__ == '__main__':
    config = {
        "font.family": "sans-serif",  # 使用衬线体
        "font.sans-serif": ["Helvetica"],  # 全局默认使用衬线宋体,
        "font.size": 22,
        "axes.unicode_minus": False,
        # "mathtext.fontset": "stix",  # 设置 LaTeX 字体，stix 近似于 Times 字体
    }
    matplotlib.rcParams['xtick.labelsize'] = 15
    plt.rcParams.update(config)
    # line_cov_dict = {
    #     'NNSmith': [16955, 16995, 16995, 17030, 17040, 17040, 17055, 17055, 17055, 17056, 17068, 17068, 17068, 17068,
    #                 17068, 17068, 17068, 17068, 17068, 17068, 17069, 17069, 17069, 17069, 17069],
    #     # 'HirGen': [15068, 15068, 15068, 15068, 15069, 15069, 15069, 15069, 15069, 16172, 16172, 16172, 16172, 16172,
    #     #            16172, 16172, 16172, 16172, 16172, 16172, 16172, 16172, 16172, 16172, 16172],
    #     'WhiteFox': [11800, 15303, 15503, 15503, 15567, 15583, 15652, 15657, 15657, 15657, 15660, 15994, 15994, 16036,
    #                  16087, 16087, 16087, 16210, 16256, 16256, 16265, 16306, 16306, 16306],
    #     'OATest': [26913, 27395, 27509, 27622, 27651, 27731, 27798, 27911, 27942, 28014, 28032, 28041, 28070,
    #                     28140, 28145, 28145, 28153, 28221, 28221, 28259, 28266, 28270, 28270, 28282, 28283]}
    # func_cov_dict = {
    #     'NNSmith': [15539, 15583, 15584, 15596, 15599, 15603, 15604, 15604, 15604, 15604, 15609, 15610, 15610, 15610,
    #                 15610, 15610, 15610, 15610, 15610, 15610, 15610, 15610, 15610, 15610, 15610],
    #     # 'HirGen': [14860, 14860, 14860, 14860, 14862, 14862, 14862, 14862, 14862, 15301, 15301, 15301, 15301, 15301,
    #     #            15301, 15301, 15301, 15301, 15301, 15301, 15301, 15301, 15301, 15301, 15301],
    #     'WhiteFox': [13918, 15237, 15299, 15299, 15314, 15319, 15329, 15332, 15332, 15332, 15332, 15436, 15436, 15443,
    #                  15473, 15473, 15473, 15518, 15546, 15546, 15554, 15558, 15558, 15558],
    #     'OATest': [18894, 19060, 19109, 19155, 19164, 19192, 19208, 19292, 19307, 19317, 19323, 19346, 19360,
    #                     19371, 19378, 19378, 19382, 19394, 19394, 19397, 19399, 19399, 19401, 19405, 19406]}
    # branch_cov_dict = {
    #     'NNSmith': [36613, 36814, 36832, 36990, 37012, 37077, 37107, 37107, 37107, 37108, 37194, 37220, 37220, 37220,
    #                 37220, 37220, 37220, 37221, 37221, 37221, 37223, 37223, 37223, 37223, 37223],
    #     # 'HirGen': [30665, 30665, 30665, 30665, 30669, 30669, 30669, 30669, 30669, 32993, 32993, 32993, 32993, 32993,
    #     #            32993, 32993, 32993, 32993, 32993, 32993, 32993, 32993, 32993, 32993, 32993],
    #     'WhiteFox': [24558, 33955, 34617, 34617, 34798, 34833, 35038, 35069, 35069, 35069, 35089, 35606, 35606, 35707,
    #                  36065, 36065, 36065, 36494, 36642, 36643, 36643, 36746, 36746, 36746],
    #     'OATest': [58314, 59852, 60558, 60995, 61113, 61344, 61543, 61884, 62042, 62238, 62272, 62558, 62642,
    #                     62842, 62857, 62858, 62922, 63128, 63131, 63261, 63304, 63337, 63378, 63436, 63460]}

    line_cov_dict = {
        'NNSmith': [25.912397603619024, 25.973529771365694, 25.973529771365694, 26.027020418144026, 26.042303460080696,
                    26.042303460080696, 26.065228022985693, 26.065228022985693, 26.065228022985693, 26.066756327179363,
                    26.085095977503364, 26.085095977503364, 26.085095977503364, 26.085095977503364, 26.085095977503364,
                    26.085095977503364, 26.085095977503364, 26.085095977503364, 26.085095977503364, 26.085095977503364,
                    26.08662428169703, 26.08662428169703, 26.08662428169703, 26.08662428169703],
        'WhiteFox': [18.578581100229872, 24.093900557357433, 24.408791762446075, 24.408791762446075, 24.50955694807444,
                     24.534748244481534, 24.643385710237112, 24.65125799036433, 24.65125799036433, 24.65125799036433,
                     24.65598135844066, 25.18184967093869, 25.18184967093869, 25.247976824007306, 25.328274081304908,
                     25.328274081304908, 25.328274081304908, 25.521932172434425, 25.594357149604814, 25.594357149604814,
                     25.608527253833802, 25.67307995087697, 25.67307995087697, 25.67307995087697],
        'OATest': [41.12685096043644, 41.86341478323324, 42.037622824309665, 42.21030272467489, 42.25461880529959,
                        42.37687006219532, 42.47925548984551, 42.65193539021073, 42.69930775225782, 42.80933388346399,
                        42.83684041626553, 42.8505936826663, 42.894909763291004, 43.00187961307477, 43.009520316630756,
                        43.009520316630756, 43.02174544232033, 43.1256590106817, 43.1256590106817, 43.18372835770718,
                        43.194425342685555, 43.20053790553034, 43.20053790553034, 43.218875594064706, 43.2204037347759]}
    func_cov_dict = {
        'NNSmith': [28.925912137006705, 29.007818317200297, 29.00967982129561, 29.032017870439315, 29.037602382725243,
                    29.045048399106477, 29.04690990320179, 29.04690990320179, 29.04690990320179, 29.04690990320179,
                    29.056217423678333, 29.05807892777364, 29.05807892777364, 29.05807892777364, 29.05807892777364,
                    29.05807892777364, 29.05807892777364, 29.05807892777364, 29.05807892777364, 29.05807892777364,
                    29.05807892777364, 29.05807892777364, 29.05807892777364, 29.05807892777364],
        'WhiteFox': [25.516545971216427, 27.934732789439913, 28.048400403336693, 28.048400403336693, 28.075900632505267,
                     28.08506737556146, 28.10340086167385, 28.10890090750756, 28.10890090750756, 28.10890090750756,
                     28.10890090750756, 28.29956916307636, 28.29956916307636, 28.31240260335503, 28.36740306169218,
                     28.36740306169218, 28.36740306169218, 28.449903749197908, 28.50123751031259, 28.50123751031259,
                     28.515904299202493, 28.523237693647445, 28.523237693647445, 28.523237693647445],
        'OATest': [35.16994899668664, 35.478947172480545, 35.57015747738357, 35.65578347790477, 35.67253639105022,
                        35.72465656528052, 35.75443952198354, 35.91080004467443, 35.93872156658352, 35.957335914522915,
                        35.96850452328655, 36.01131752354715, 36.0373776106623, 36.057853393395625, 36.0708834369532,
                        36.0708834369532, 36.07832917612896, 36.100666393656226, 36.100666393656226, 36.10625069803805,
                        36.10997356762592, 36.10997356762592, 36.113696437213804, 36.12114217638956, 36.1230036111835]}
    branch_cov_dict = {
        'NNSmith': [24.58051762975222, 24.654070702891556, 24.654070702891556, 24.709235507746058, 24.720728175424078,
                    24.720728175424078, 24.74141497724452, 24.74141497724452, 24.74141497724452, 24.743713510780122,
                    24.750609111386936, 24.750609111386936, 24.750609111386936, 24.750609111386936, 24.750609111386936,
                    24.750609111386936, 24.750609111386936, 24.750609111386936, 24.750609111386936, 24.750609111386936,
                    24.750609111386936, 24.750609111386936, 24.750609111386936, 24.750609111386936],
        'WhiteFox': [17.1959228831713, 23.17742049386785, 23.516395565076152, 23.516395565076152, 23.636449236129092,
                     23.648219203879382, 23.794166803982957, 23.805936771733247, 23.805936771733247, 23.805936771733247,
                     23.81064475883336, 24.39678915279772, 24.39678915279772, 24.453284997999106, 24.521550810950778,
                     24.521550810950778, 24.521550810950778, 24.71928626915562, 24.780490101457122, 24.780490101457122,
                     24.780490101457122, 24.86287987570914, 24.86287987570914, 24.86287987570914],
        'OATest': [39.931505275013215, 40.67161606178316, 40.88537476727883, 41.05316385868941, 41.10602891488726,
                        41.225549911508494, 41.34277242742547, 41.533546325878596, 41.584112901372194,
                        41.735812627852994, 41.74730503137426, 41.76799135771255, 41.816259452501896, 41.9472728526444,
                        41.95876525616568, 41.95876525616568, 41.96566069827844, 42.11046498264647, 42.11046498264647,
                        42.188613326591124, 42.2001057301124, 42.20929965292942, 42.20929965292942, 42.21389661433792,
                        42.216195095042174]}

    branch_cov_dict = preprocess(branch_cov_dict)
    line_cov_dict = preprocess(line_cov_dict)
    func_cov_dict = preprocess(func_cov_dict)
    print("Branch cover:")
    for k, v in branch_cov_dict.items():
        print(k, round(v[-1]/100, 4))
    print()
    print("Line cover:")
    for k, v in line_cov_dict.items():
        print(k, round(v[-1]/100, 4))
    # print()
    # print("Func cover:")
    # for k, v in func_cov_dict.items():
    #     print(k, round(v[-1]/100, 4))

    # plot_coverage(branch_cov_dict, "branches")
    # plot_coverage(line_cov_dict, "lines")
    # plot_coverage(func_cov_dict, "functions")
    #
    plot_coverage_smooth(branch_cov_dict, "Branch")
    plot_coverage_smooth(line_cov_dict, "Line")
    # plot_coverage_smooth(func_cov_dict, "functions")

